name: Release

on:
  workflow_dispatch:
    inputs:
      packageVersion:
        description: 'Package version'
        required: true

defaults:
  run:
    working-directory: src

jobs:
  exe:
    name: Build executables
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rid:
          - win-x64
          - win-arm64
          - osx-x64
          - osx-arm64
          - linux-x64
          - linux-arm64
          - linux-musl-x64
          - linux-musl-arm64

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Install dependencies
        working-directory: src/Valleysoft.DockerfileSpy
        run: dotnet restore --runtime ${{ matrix.rid }}

      - name: Publish
        working-directory: src/Valleysoft.DockerfileSpy
        run: dotnet publish -f net8.0 -c Release --no-restore -o ${{ github.workspace }}/publish --runtime ${{ matrix.rid }}

      - name: Rename output
        run: |
          if [[ "${{ matrix.rid }}" == *"win"* ]]; then
            programExt=".exe"
          else
            programExt=""
          fi
          
          exeName="dfspy-${{ github.event.inputs.packageVersion }}-${{ matrix.rid }}${programExt}"
          echo "EXE_NAME=${exeName}" >> $GITHUB_ENV
          mv ${{ github.workspace }}/publish/dfspy${programExt} ${{ github.workspace }}/publish/${exeName}
          rm ${{ github.workspace }}/publish/dfspy.pdb
      
      - name: Generate checksum
        run: sha256sum ${EXE_NAME} >${EXE_NAME}.sha256sum
        working-directory: ${{ github.workspace }}/publish

      - name: Save build binaries
        uses: actions/upload-artifact@v3
        with:
          name: binaries-${{ matrix.rid }}
          path: ${{ github.workspace }}/publish

  save-exes:
    name: Save executables
    needs: exe
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Download build binaries
        uses: actions/download-artifact@v3
        with:
          path: ${{ github.workspace }}/publish

      - name: Move all files
        run: |
          mv ${{ github.workspace }}/publish/binaries-*/* ${{ github.workspace }}/publish
          rm -r ${{ github.workspace }}/publish/binaries-*

      - name: Save build binaries
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: ${{ github.workspace }}/publish

  nuget:
    name: Publish NuGet Package
    runs-on: ubuntu-latest
    needs: save-exes

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release --no-restore Valleysoft.DockerfileSpy

      - name: Pack
        env:
          PACKAGE_VERSION: ${{ github.event.inputs.packageVersion }}
        run: dotnet pack -c Release -p:Version=$PACKAGE_VERSION Valleysoft.DockerfileSpy -p:IsPack=true
      
      # - name: Publish Package
      #   run: dotnet nuget push "Valleysoft.DockerfileSpy/bin/Release/*.nupkg" -k ${{secrets.NUGET_ORG_API_KEY}} -s https://nuget.org
